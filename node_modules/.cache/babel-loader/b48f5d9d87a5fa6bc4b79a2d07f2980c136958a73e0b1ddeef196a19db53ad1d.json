{"ast":null,"code":"var _jsxFileName = \"/Users/bastien/Desktop/ToDoList/src/Components/Archive/Archive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './Archive.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Archive() {\n  _s();\n  const [archivedLists, setArchivedLists] = useState([]);\n  useEffect(() => {\n    // Récupérer les listes archivées depuis le localStorage lors du chargement initial\n    const storedData = JSON.parse(localStorage.getItem('listData')) || {};\n    const lists = Object.values(storedData);\n    setArchivedLists(lists);\n  }, []);\n  const handleClick = list => {\n    let listItemsString = '';\n    if (list.listItems && list.listItems.length > 0) {\n      for (const item of list.listItems) {\n        listItemsString += `- ${item}\\n`;\n      }\n    } else {\n      listItemsString = 'Aucun élément dans la liste.';\n    }\n    alert(`List Title: ${list.listTitle}\\nList Items:\\n${listItemsString}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"archives\",\n      children: \"Archived Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"archivedLists\",\n      children: archivedLists.map((list, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleClick(list),\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Titre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 25\n        }, this), \" \", list.listTitle]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Archive, \"Tvgaa1Htj0uOrWgCPF/nXnCESZo=\");\n_c = Archive;\nexport default Archive;\nvar _c;\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Archive","_s","archivedLists","setArchivedLists","storedData","JSON","parse","localStorage","getItem","lists","Object","values","handleClick","list","listItemsString","listItems","length","item","alert","listTitle","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onClick","_c","$RefreshReg$"],"sources":["/Users/bastien/Desktop/ToDoList/src/Components/Archive/Archive.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './Archive.css';\n\nfunction Archive() {\n    const [archivedLists, setArchivedLists] = useState([]);\n\n    useEffect(() => {\n        // Récupérer les listes archivées depuis le localStorage lors du chargement initial\n        const storedData = JSON.parse(localStorage.getItem('listData')) || {};\n        const lists = Object.values(storedData);\n        setArchivedLists(lists);\n    }, []);\n\n    const handleClick = (list) => {\n        let listItemsString = '';\n        if (list.listItems && list.listItems.length > 0) {\n            for (const item of list.listItems) {\n                listItemsString += `- ${item}\\n`;\n            }\n        } else {\n            listItemsString = 'Aucun élément dans la liste.';\n        }\n\n        alert(`List Title: ${list.listTitle}\\nList Items:\\n${listItemsString}`);\n    };\n\n    return (\n        <div className=\"container\">\n            <h1 className=\"archives\">Archived Lists</h1>\n            <ul className=\"archivedLists\">\n                {archivedLists.map((list, index) => (\n                    <li key={index} onClick={() => handleClick(list)}>\n                        <strong>Titre:</strong> {list.listTitle}\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Archive;\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMO,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC;IACrE,MAAMC,KAAK,GAAGC,MAAM,CAACC,MAAM,CAACP,UAAU,CAAC;IACvCD,gBAAgB,CAACM,KAAK,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMG,WAAW,GAAIC,IAAI,IAAK;IAC1B,IAAIC,eAAe,GAAG,EAAE;IACxB,IAAID,IAAI,CAACE,SAAS,IAAIF,IAAI,CAACE,SAAS,CAACC,MAAM,GAAG,CAAC,EAAE;MAC7C,KAAK,MAAMC,IAAI,IAAIJ,IAAI,CAACE,SAAS,EAAE;QAC/BD,eAAe,IAAK,KAAIG,IAAK,IAAG;MACpC;IACJ,CAAC,MAAM;MACHH,eAAe,GAAG,8BAA8B;IACpD;IAEAI,KAAK,CAAE,eAAcL,IAAI,CAACM,SAAU,kBAAiBL,eAAgB,EAAC,CAAC;EAC3E,CAAC;EAED,oBACIf,OAAA;IAAKqB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACtBtB,OAAA;MAAIqB,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5C1B,OAAA;MAAIqB,SAAS,EAAC,eAAe;MAAAC,QAAA,EACxBnB,aAAa,CAACwB,GAAG,CAAC,CAACb,IAAI,EAAEc,KAAK,kBAC3B5B,OAAA;QAAgB6B,OAAO,EAAEA,CAAA,KAAMhB,WAAW,CAACC,IAAI,CAAE;QAAAQ,QAAA,gBAC7CtB,OAAA;UAAAsB,QAAA,EAAQ;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACZ,IAAI,CAACM,SAAS;MAAA,GADlCQ,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACxB,EAAA,CAnCQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAqChB,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}