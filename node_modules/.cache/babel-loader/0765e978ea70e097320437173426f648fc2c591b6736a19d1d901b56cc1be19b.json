{"ast":null,"code":"var _jsxFileName = \"/Users/bastien/Desktop/ToDoList/src/Components/Archive/Archive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Archive() {\n  _s();\n  const [archiveData, setArchiveData] = useState([]);\n  useEffect(() => {\n    const storedData = Object.keys(localStorage).filter(key => key.startsWith('listData-')).map(key => JSON.parse(localStorage.getItem(key)));\n    console.log(storedData); // Vérifiez les données extraites du localStorage\n    setArchiveData(storedData);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"iner\",\n    conta: true,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"archives\",\n      children: \"Archived Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: archiveData.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [\"List Number: \", item.number]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: item.listItems.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: task\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n}\n_s(Archive, \"03SmQRc/a1rjQ8YAj9CqfZxglFI=\");\n_c = Archive;\nexport default Archive;\nvar _c;\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Archive","_s","archiveData","setArchiveData","storedData","Object","keys","localStorage","filter","key","startsWith","map","JSON","parse","getItem","console","log","className","conta","children","fileName","_jsxFileName","lineNumber","columnNumber","item","number","listItems","task","index","id","_c","$RefreshReg$"],"sources":["/Users/bastien/Desktop/ToDoList/src/Components/Archive/Archive.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nfunction Archive() {\n    const [archiveData, setArchiveData] = useState([]);\n\n    useEffect(() => {\n        const storedData = Object.keys(localStorage)\n            .filter(key => key.startsWith('listData-'))\n            .map(key => JSON.parse(localStorage.getItem(key)));\n        console.log(storedData); // Vérifiez les données extraites du localStorage\n        setArchiveData(storedData);\n    }, []);\n\n    return (\n        <div className=\"iner\" conta>\n            <h2 className=\"archives\">Archived Lists</h2>\n            <ul>\n                {archiveData.map(item => (\n                    <li key={item.id}>\n                        <strong>List Number: {item.number}</strong>\n                        <ul>\n                            {item.listItems.map((task, index) => (\n                                <li key={index}>\n                                    {task}\n                                </li>\n                            ))}\n                        </ul>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Archive;\n\n\n\n\n\n\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAElDC,SAAS,CAAC,MAAM;IACZ,MAAMO,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACC,YAAY,CAAC,CACvCC,MAAM,CAACC,GAAG,IAAIA,GAAG,CAACC,UAAU,CAAC,WAAW,CAAC,CAAC,CAC1CC,GAAG,CAACF,GAAG,IAAIG,IAAI,CAACC,KAAK,CAACN,YAAY,CAACO,OAAO,CAACL,GAAG,CAAC,CAAC,CAAC;IACtDM,OAAO,CAACC,GAAG,CAACZ,UAAU,CAAC,CAAC,CAAC;IACzBD,cAAc,CAACC,UAAU,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKkB,SAAS,EAAC,MAAM;IAACC,KAAK;IAAAC,QAAA,gBACvBpB,OAAA;MAAIkB,SAAS,EAAC,UAAU;MAAAE,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5CxB,OAAA;MAAAoB,QAAA,EACKjB,WAAW,CAACS,GAAG,CAACa,IAAI,iBACjBzB,OAAA;QAAAoB,QAAA,gBACIpB,OAAA;UAAAoB,QAAA,GAAQ,eAAa,EAACK,IAAI,CAACC,MAAM;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,eAC3CxB,OAAA;UAAAoB,QAAA,EACKK,IAAI,CAACE,SAAS,CAACf,GAAG,CAAC,CAACgB,IAAI,EAAEC,KAAK,kBAC5B7B,OAAA;YAAAoB,QAAA,EACKQ;UAAI,GADAC,KAAK;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GARAC,IAAI,CAACK,EAAE;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACtB,EAAA,CA9BQD,OAAO;AAAA8B,EAAA,GAAP9B,OAAO;AAgChB,eAAeA,OAAO;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}