{"ast":null,"code":"var _jsxFileName = \"/Users/bastien/Desktop/to-do-list/src/Components/List/List.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './List.css';\nimport { useDrag, useDrop } from 'react-dnd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModalTypes = {\n  MODAL: 'modal'\n};\nconst Modal = ({\n  index,\n  closeModal\n}) => {\n  _s();\n  const [modalPosition, setModalPosition] = useState({\n    x: 0,\n    y: 0\n  });\n  const [{\n    isDragging\n  }, ref] = useDrag({\n    type: ModalTypes.MODAL,\n    item: {\n      index\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const handleDrag = monitor => {\n    if (monitor.isDragging()) {\n      const clientOffset = monitor.getClientOffset();\n      if (clientOffset) {\n        setModalPosition({\n          x: clientOffset.x,\n          y: clientOffset.y\n        });\n      }\n    }\n  };\n  const [, drop] = useDrop({\n    accept: ModalTypes.MODAL,\n    hover: draggedModal => {\n      if (draggedModal.index !== index) {\n        closeModal(draggedModal.index);\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: node => {\n      ref(drop(node));\n      handleDrag(node); // Appeler la fonction handleDrag pendant le déplacement\n    },\n\n    className: \"modalBackground\",\n    style: {\n      transform: `translate(${modalPosition.x}px, ${modalPosition.y}px)`,\n      opacity: isDragging ? 0.5 : 1 // Réduire l'opacité pendant le déplacement\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"List #\", index + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"modalCloseButton\",\n        onClick: () => closeModal(index),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(Modal, \"b6zmNJEm+D5l4nEv/iGNnf1bWFg=\", false, function () {\n  return [useDrag, useDrop];\n});\n_c = Modal;\nfunction List() {\n  _s2();\n  const [modals, setModals] = useState([]);\n  const openModal = () => {\n    setModals([...modals, true]);\n  };\n  const closeModal = index => {\n    const updatedModals = [...modals];\n    updatedModals[index] = false;\n    setModals(updatedModals);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonAdd\",\n      onClick: openModal,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-plus\",\n          alt: \"Add Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), modals.map((modalVisible, index) => modalVisible && /*#__PURE__*/_jsxDEV(Modal, {\n      index: index,\n      closeModal: closeModal\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 60\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n_s2(List, \"LE6pmkKtJcVKDpSLIVsz/ZIaH6g=\");\n_c2 = List;\nexport default List;\nvar _c, _c2;\n$RefreshReg$(_c, \"Modal\");\n$RefreshReg$(_c2, \"List\");","map":{"version":3,"names":["React","useState","useDrag","useDrop","jsxDEV","_jsxDEV","ModalTypes","MODAL","Modal","index","closeModal","_s","modalPosition","setModalPosition","x","y","isDragging","ref","type","item","collect","monitor","handleDrag","clientOffset","getClientOffset","drop","accept","hover","draggedModal","node","className","style","transform","opacity","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","List","_s2","modals","setModals","openModal","updatedModals","alt","map","modalVisible","_c2","$RefreshReg$"],"sources":["/Users/bastien/Desktop/to-do-list/src/Components/List/List.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './List.css';\nimport { useDrag, useDrop } from 'react-dnd';\n\nconst ModalTypes = {\n  MODAL: 'modal',\n};\n\nconst Modal = ({ index, closeModal }) => {\n  const [modalPosition, setModalPosition] = useState({ x: 0, y: 0 });\n\n  const [{ isDragging }, ref] = useDrag({\n    type: ModalTypes.MODAL,\n    item: { index },\n    collect: (monitor) => ({\n      isDragging: monitor.isDragging(),\n    }),\n  });\n\n  const handleDrag = (monitor) => {\n    if (monitor.isDragging()) {\n      const clientOffset = monitor.getClientOffset();\n      if (clientOffset) {\n        setModalPosition({ x: clientOffset.x, y: clientOffset.y });\n      }\n    }\n  };\n\n  const [, drop] = useDrop({\n    accept: ModalTypes.MODAL,\n    hover: (draggedModal) => {\n      if (draggedModal.index !== index) {\n        closeModal(draggedModal.index);\n      }\n    },\n  });\n\n  return (\n    <div\n      ref={(node) => {\n        ref(drop(node));\n        handleDrag(node); // Appeler la fonction handleDrag pendant le déplacement\n      }}\n      className=\"modalBackground\"\n      style={{\n        transform: `translate(${modalPosition.x}px, ${modalPosition.y}px)`,\n        opacity: isDragging ? 0.5 : 1, // Réduire l'opacité pendant le déplacement\n      }}\n    >\n      <div className=\"modalContent\">\n        {/* Contenu de votre modal */}\n        <h2>List #{index + 1}</h2>\n        <form>{/* Contenu du formulaire ici */}</form>\n        <button className=\"modalCloseButton\" onClick={() => closeModal(index)}>\n          Close\n        </button>\n      </div>\n    </div>\n  );\n};\n\nfunction List() {\n  const [modals, setModals] = useState([]);\n\n  const openModal = () => {\n    setModals([...modals, true]);\n  };\n\n  const closeModal = (index) => {\n    const updatedModals = [...modals];\n    updatedModals[index] = false;\n    setModals(updatedModals);\n  };\n\n  return (\n    <div>\n      <button className=\"buttonAdd\" onClick={openModal}>\n        <span className=\"icon\">\n          <i className=\"fa-solid fa-plus\" alt=\"Add Icon\"></i>\n        </span>\n      </button>\n      {modals.map((modalVisible, index) => modalVisible && <Modal key={index} index={index} closeModal={closeModal} />)}\n    </div>\n  );\n}\n\nexport default List;\n\n\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}