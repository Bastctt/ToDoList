{"ast":null,"code":"var _jsxFileName = \"/Users/bastien/Desktop/to-do-list/src/Components/List/List.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './List.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction List() {\n  _s();\n  const [modals, setModals] = useState([]); // Tableau d'états pour les modales\n\n  const openModal = () => {\n    setModals([...modals, true]); // Ouvre une nouvelle modale\n  };\n\n  const closeModal = index => {\n    const updatedModals = [...modals];\n    updatedModals[index] = false; // Ferme la modale à l'index donné\n    setModals(updatedModals);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"buttonAdd\",\n      onClick: openModal,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"icon\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-plus\",\n          alt: \"Add Icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), modals.map((modalVisible, index) => modalVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modalBackground\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modalContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"List #\", index + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inputContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Votre texte ici\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Valider\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"modalCloseButton\",\n          onClick: () => closeModal(index)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(List, \"LE6pmkKtJcVKDpSLIVsz/ZIaH6g=\");\n_c = List;\nexport default List;\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","List","_s","modals","setModals","openModal","closeModal","index","updatedModals","children","className","onClick","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","modalVisible","type","placeholder","_c","$RefreshReg$"],"sources":["/Users/bastien/Desktop/to-do-list/src/Components/List/List.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './List.css';\n\nfunction List() {\n  const [modals, setModals] = useState([]); // Tableau d'états pour les modales\n\n  const openModal = () => {\n    setModals([...modals, true]); // Ouvre une nouvelle modale\n  };\n\n  const closeModal = (index) => {\n    const updatedModals = [...modals];\n    updatedModals[index] = false; // Ferme la modale à l'index donné\n    setModals(updatedModals);\n  };\n\n  return (\n    <div>\n      <button className=\"buttonAdd\" onClick={openModal}>\n        <span className=\"icon\">\n          <i className=\"fa-solid fa-plus\" alt=\"Add Icon\"></i>\n        </span>\n      </button>\n      {modals.map((modalVisible, index) => (\n        modalVisible && (\n          <div className=\"modalBackground\" key={index}>\n            <div className=\"modalContent\">\n              {/* Contenu de votre modal */}\n              <h2>List #{index + 1}</h2>\n              <form>\n                <div className=\"inputContainer\">\n                    <input type=\"text\" placeholder=\"Votre texte ici\" />\n                    <button type=\"submit\">Valider</button>\n                </div>\n                </form>\n                <button className=\"modalCloseButton\" onClick={() => closeModal(index)}>\n                {/* Icône de fermeture ici */}\n              </button>\n            </div>\n          </div>\n        )\n      ))}\n    </div>\n  );\n}\n\nexport default List;\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C,MAAMO,SAAS,GAAGA,CAAA,KAAM;IACtBD,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;EAChC,CAAC;;EAED,MAAMG,UAAU,GAAIC,KAAK,IAAK;IAC5B,MAAMC,aAAa,GAAG,CAAC,GAAGL,MAAM,CAAC;IACjCK,aAAa,CAACD,KAAK,CAAC,GAAG,KAAK,CAAC,CAAC;IAC9BH,SAAS,CAACI,aAAa,CAAC;EAC1B,CAAC;EAED,oBACER,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAQU,SAAS,EAAC,WAAW;MAACC,OAAO,EAAEN,SAAU;MAAAI,QAAA,eAC/CT,OAAA;QAAMU,SAAS,EAAC,MAAM;QAAAD,QAAA,eACpBT,OAAA;UAAGU,SAAS,EAAC,kBAAkB;UAACE,GAAG,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACRb,MAAM,CAACc,GAAG,CAAC,CAACC,YAAY,EAAEX,KAAK,KAC9BW,YAAY,iBACVlB,OAAA;MAAKU,SAAS,EAAC,iBAAiB;MAAAD,QAAA,eAC9BT,OAAA;QAAKU,SAAS,EAAC,cAAc;QAAAD,QAAA,gBAE3BT,OAAA;UAAAS,QAAA,GAAI,QAAM,EAACF,KAAK,GAAG,CAAC;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC1BhB,OAAA;UAAAS,QAAA,eACET,OAAA;YAAKU,SAAS,EAAC,gBAAgB;YAAAD,QAAA,gBAC3BT,OAAA;cAAOmB,IAAI,EAAC,MAAM;cAACC,WAAW,EAAC;YAAiB;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACnDhB,OAAA;cAAQmB,IAAI,EAAC,QAAQ;cAAAV,QAAA,EAAC;YAAO;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC,eACPhB,OAAA;UAAQU,SAAS,EAAC,kBAAkB;UAACC,OAAO,EAAEA,CAAA,KAAML,UAAU,CAACC,KAAK;QAAE;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEhE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IAAC,GAb8BT,KAAK;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OActC,CAER,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACd,EAAA,CAzCQD,IAAI;AAAAoB,EAAA,GAAJpB,IAAI;AA2Cb,eAAeA,IAAI;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}