{"ast":null,"code":"var _jsxFileName = \"/Users/bastien/Desktop/to-do-list/src/Components/Archive/Archive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport './Archive.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Archive() {\n  _s();\n  const [archivedLists, setArchivedLists] = useState([]);\n  useEffect(() => {\n    // Récupérer les listes archivées depuis le localStorage lors du chargement initial\n    const savedLists = JSON.parse(localStorage.getItem('archivedLists'));\n    if (savedLists) {\n      setArchivedLists(savedLists);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Archived Lists\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"archivedLists\",\n      children: archivedLists.map((list, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: list\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n_s(Archive, \"Tvgaa1Htj0uOrWgCPF/nXnCESZo=\");\n_c = Archive;\nexport default Archive;\nvar _c;\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Archive","_s","archivedLists","setArchivedLists","savedLists","JSON","parse","localStorage","getItem","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","list","index","_c","$RefreshReg$"],"sources":["/Users/bastien/Desktop/to-do-list/src/Components/Archive/Archive.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport './Archive.css';\n\nfunction Archive() {\n    const [archivedLists, setArchivedLists] = useState([]);\n\n    useEffect(() => {\n        // Récupérer les listes archivées depuis le localStorage lors du chargement initial\n        const savedLists = JSON.parse(localStorage.getItem('archivedLists'));\n        if (savedLists) {\n            setArchivedLists(savedLists);\n        }\n    }, []);\n\n    return (\n        <div>\n            <p>Archived Lists</p>\n            <ul className=\"archivedLists\">\n                {archivedLists.map((list, index) => (\n                    <li key={index}>{list}</li>\n                ))}\n            </ul>\n        </div>\n    )\n}\n\nexport default Archive;\n\n\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvB,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMO,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,eAAe,CAAC,CAAC;IACpE,IAAIJ,UAAU,EAAE;MACZD,gBAAgB,CAACC,UAAU,CAAC;IAChC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAAU,QAAA,gBACIV,OAAA;MAAAU,QAAA,EAAG;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eACrBd,OAAA;MAAIe,SAAS,EAAC,eAAe;MAAAL,QAAA,EACxBP,aAAa,CAACa,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAC3BlB,OAAA;QAAAU,QAAA,EAAiBO;MAAI,GAAZC,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACZ,EAAA,CArBQD,OAAO;AAAAkB,EAAA,GAAPlB,OAAO;AAuBhB,eAAeA,OAAO;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}