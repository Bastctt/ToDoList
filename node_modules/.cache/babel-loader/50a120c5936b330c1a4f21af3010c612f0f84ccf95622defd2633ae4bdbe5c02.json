{"ast":null,"code":"var _jsxFileName = \"/Users/bastien/Desktop/to-do-list/src/Components/Archive/Archive.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Archive() {\n  _s();\n  const [savedLists, setSavedLists] = useState([]);\n  useEffect(() => {\n    const savedListsString = localStorage.getItem('savedLists');\n    if (savedListsString) {\n      const parsedLists = JSON.parse(savedListsString);\n      // Vérifiez si parsedLists est un tableau avant de le définir dans l'état\n      if (Array.isArray(parsedLists)) {\n        setSavedLists(parsedLists);\n      } else {\n        console.error('Les données stockées ne sont pas au format attendu.');\n      }\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listes Sauvegard\\xE9es\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: savedLists.map((list, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: list.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: list.items.map((item, itemIndex) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: item\n          }, itemIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n}\n_s(Archive, \"yi3W73DMq+UTnwNbi4H1iJR+zoI=\");\n_c = Archive;\nexport default Archive;\nvar _c;\n$RefreshReg$(_c, \"Archive\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Archive","_s","savedLists","setSavedLists","savedListsString","localStorage","getItem","parsedLists","JSON","parse","Array","isArray","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","list","index","title","items","item","itemIndex","_c","$RefreshReg$"],"sources":["/Users/bastien/Desktop/to-do-list/src/Components/Archive/Archive.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nfunction Archive() {\n    const [savedLists, setSavedLists] = useState([]);\n\n    useEffect(() => {\n        const savedListsString = localStorage.getItem('savedLists');\n        if (savedListsString) {\n            const parsedLists = JSON.parse(savedListsString);\n            // Vérifiez si parsedLists est un tableau avant de le définir dans l'état\n            if (Array.isArray(parsedLists)) {\n                setSavedLists(parsedLists);\n            } else {\n                console.error('Les données stockées ne sont pas au format attendu.');\n            }\n        }\n    }, []);\n\n    return (\n        <div>\n            <h1>Listes Sauvegardées</h1>\n            <ul>\n                {savedLists.map((list, index) => (\n                    <li key={index}>\n                        <h2>{list.title}</h2>\n                        <ul>\n                            {list.items.map((item, itemIndex) => (\n                                <li key={itemIndex}>{item}</li>\n                            ))}\n                        </ul>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n}\n\nexport default Archive;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACf,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMQ,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAC3D,IAAIF,gBAAgB,EAAE;MAClB,MAAMG,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACL,gBAAgB,CAAC;MAChD;MACA,IAAIM,KAAK,CAACC,OAAO,CAACJ,WAAW,CAAC,EAAE;QAC5BJ,aAAa,CAACI,WAAW,CAAC;MAC9B,CAAC,MAAM;QACHK,OAAO,CAACC,KAAK,CAAC,qDAAqD,CAAC;MACxE;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACId,OAAA;IAAAe,QAAA,gBACIf,OAAA;MAAAe,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BnB,OAAA;MAAAe,QAAA,EACKZ,UAAU,CAACiB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBtB,OAAA;QAAAe,QAAA,gBACIf,OAAA;UAAAe,QAAA,EAAKM,IAAI,CAACE;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACrBnB,OAAA;UAAAe,QAAA,EACKM,IAAI,CAACG,KAAK,CAACJ,GAAG,CAAC,CAACK,IAAI,EAAEC,SAAS,kBAC5B1B,OAAA;YAAAe,QAAA,EAAqBU;UAAI,GAAhBC,SAAS;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CACjC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA,GANAG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEd;AAACjB,EAAA,CAjCQD,OAAO;AAAA0B,EAAA,GAAP1B,OAAO;AAmChB,eAAeA,OAAO;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}